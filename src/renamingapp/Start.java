/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package renamingapp;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author p_unit
 */
public class Start extends javax.swing.JFrame {

    JFileChooser choose, rchoose;
    String rfrom, rto;

    File rchooser;

    /**
     * Creates new form Start
     */
    public Start() {

        setLookAndFeel();

        initComponents();
        jTextArea1.setEnabled(false);
        jTextArea2.setEnabled(false);
        fdirpath.setEnabled(false);
        rfilepath.setEnabled(false);
        fdirpath.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        opener = new javax.swing.JFrame();
        lfrom = new javax.swing.JLabel();
        from = new javax.swing.JTextField();
        lto = new javax.swing.JLabel();
        to = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        internal = new javax.swing.JTabbedPane();
        file = new javax.swing.JPanel();
        fbrowse = new javax.swing.JButton();
        fpath = new javax.swing.JLabel();
        fdirpath = new javax.swing.JTextField();
        extension = new javax.swing.JPanel();
        rpath = new javax.swing.JLabel();
        rfilepath = new javax.swing.JTextField();
        rbrowse = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        opener.setLocationByPlatform(true);
        opener.setMinimumSize(new java.awt.Dimension(431, 205));
        opener.setName("Change extension"); // NOI18N
        opener.setResizable(false);
        opener.setType(java.awt.Window.Type.POPUP);
        opener.getContentPane().setLayout(null);

        lfrom.setText("From");
        opener.getContentPane().add(lfrom);
        lfrom.setBounds(20, 54, 140, 30);

        from.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromActionPerformed(evt);
            }
        });
        opener.getContentPane().add(from);
        from.setBounds(50, 60, 140, 20);

        lto.setText("To");
        opener.getContentPane().add(lto);
        lto.setBounds(210, 60, 30, 20);
        opener.getContentPane().add(to);
        to.setBounds(230, 60, 130, 20);

        jButton1.setText("Cancel");
        opener.getContentPane().add(jButton1);
        jButton1.setBounds(270, 100, 65, 23);

        jButton2.setText("Ok");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        opener.getContentPane().add(jButton2);
        jButton2.setBounds(210, 100, 45, 23);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        internal.setToolTipText("");
        internal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                internalKeyPressed(evt);
            }
        });

        fbrowse.setText("Browse");
        fbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fbrowseActionPerformed(evt);
            }
        });

        fpath.setText("Path");

        fdirpath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fdirpathActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout fileLayout = new javax.swing.GroupLayout(file);
        file.setLayout(fileLayout);
        fileLayout.setHorizontalGroup(
            fileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fileLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(fpath, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fdirpath, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fbrowse, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );
        fileLayout.setVerticalGroup(
            fileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fileLayout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(fileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fbrowse)
                    .addComponent(fpath)
                    .addComponent(fdirpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(171, Short.MAX_VALUE))
        );

        internal.addTab("File Rename", file);

        rpath.setText("Path");

        rfilepath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rfilepathActionPerformed(evt);
            }
        });

        rbrowse.setText("Browse");
        rbrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout extensionLayout = new javax.swing.GroupLayout(extension);
        extension.setLayout(extensionLayout);
        extensionLayout.setHorizontalGroup(
            extensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extensionLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(rpath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rfilepath, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(rbrowse)
                .addContainerGap(121, Short.MAX_VALUE))
        );
        extensionLayout.setVerticalGroup(
            extensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(extensionLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(extensionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rpath)
                    .addComponent(rfilepath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbrowse))
                .addContainerGap(151, Short.MAX_VALUE))
        );

        internal.addTab("Change Extension", extension);

        jLabel1.setText("File Rename");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("This will rename all the\nfiles names.\n\n*Choose the file extension. \nthen \n*Type the name that\nyou want to give to all the\nfiles");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel2.setText("Change Extension");

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("This will change the file \ntype (extension for Eg\n.png,.txt etc and all other)\nin the bulk of files\n\n*Choose the file extension. \nthen \n*Type the extension that\nyou want to give to all the\nfiles");
        jScrollPane2.setViewportView(jTextArea2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(119, 119, 119))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 225, Short.MAX_VALUE))
                .addContainerGap())
        );

        internal.addTab("How to use", jPanel1);

        getContentPane().add(internal);
        internal.setBounds(0, 0, 510, 300);

        jMenu1.setMnemonic('f');
        jMenu1.setText("File");

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        open.setText("Open");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        jMenu1.add(open);

        jMenuBar1.add(jMenu1);

        jMenu2.setMnemonic('x');
        jMenu2.setText("Exit");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Close");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_openActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:

        int action = JOptionPane.showConfirmDialog(this, "Do you want to close");

        if (action == 0) {

            System.exit(0);

        } else if (action == 1) {

        } else {

        }

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void fbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fbrowseActionPerformed

        fdirpath.setText("");
        choose = new JFileChooser();
        choose.setDialogTitle("Choose Directory");

        choose.showOpenDialog(null);

        choose.show(true);

        String absPath = "";

        choose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        String path = choose.getCurrentDirectory().getAbsolutePath().toString();
       // System.out.println("Path is  : -" + path + " \n\n\n");

        File f = choose.getCurrentDirectory();

        // System.out.println(f.getAbsolutePath());
        fdirpath.setText(f.getAbsolutePath());
        fdirpath.setEditable(false);

        String fileList[] = f.list();

        File filter = null;

        String fileType = null;
        fileType = (JOptionPane.showInputDialog("Choose the File Extenstion"));

        if (fileType != null) {

            String renameFileTo = null;

            renameFileTo = (JOptionPane.showInputDialog("Write the new name for the files  "));

            int indextilldot;

            int no = 0;
            if (fileList.length != 0) {
                String fullName;
                String fileOName;

                for (String Listing : fileList) {

                    fullName = f + "\\" + Listing.toString();
                    filter = new File(fullName);
                    if (fullName.contains("." + fileType)) {
                        if (!filter.isDirectory()) {
                            //                    System.out.println(filter.getPath());
                            fileOName = filter.getName();

                            indextilldot = fileOName.indexOf('.');

                            String filerename = fileOName.substring(0, indextilldot);
                            String lastName = fileOName.substring(indextilldot);
                            filerename = renameFileTo + "(" + no + ")" + lastName;
                            no++;
                            //System.out.println(filter.getParent() + "\\" + filerename);
                            boolean truee = filter.renameTo(new File(filter.getParent() + "\\" + filerename));
                            // System.out.println(truee);

                        }
                    }
                }
                JOptionPane.showMessageDialog(null, "Done !!");
                absPath = null;

                fileOName = fileOName = fileType = renameFileTo = path = null;
                fdirpath.setText(null);
                fdirpath.setEditable(false);
            }
        } else {

            JOptionPane.showMessageDialog(null, "Please enter the file extension");

        }

    }//GEN-LAST:event_fbrowseActionPerformed

    private void fdirpathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fdirpathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fdirpathActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:.

        int action = JOptionPane.showConfirmDialog(this, "Do you want to close");

        if (action == 0) {

        } else if (action == 1) {

        } else {

        }

    }//GEN-LAST:event_formWindowClosing

    private void rbrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbrowseActionPerformed
        // TODO add your handling code here:

        rchoose = new JFileChooser();

        rchoose.showOpenDialog(null);

        rchoose.setDialogTitle("Choose Directory");
        rchoose.show(true);

        String absPath = "";

        rchoose.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);

        String path = rchoose.getCurrentDirectory().getAbsolutePath().toString();
        // System.out.println("Path is  : -" + path + " \n\n\n");

        File f = rchoose.getCurrentDirectory();

        //  System.out.println(f.getAbsolutePath());
        rfilepath.setText(f.getAbsolutePath());
        rfilepath.setEditable(false);

        String fileList[] = f.list();

        File filter = null;

        String fileType = "";
        fileType = (JOptionPane.showInputDialog("Choose the File Extenstion"));
        if (fileType != null) {
            String renameTo = "";

            renameTo = (JOptionPane.showInputDialog("Enter the new Extention . "));

            int indexatdot = 0;

            int no = 0;
            if (fileList.length != 0) {
                String fileOName;
                String filerename;
                for (String Listing : fileList) {

                    String fullName = f + "\\" + Listing.toString();

                    filter = new File(fullName);

                    if (fullName.contains("." + fileType)) {
                        if (!filter.isDirectory()) {

                            //System.out.println(filter.getPath());
                            fileOName = filter.getName();

                            indexatdot = fileOName.indexOf('.');

                            filerename = fileOName.substring(0, indexatdot);
                            filerename = filerename + "." + renameTo;
                            //System.out.println(filter.getParent() + "\\" + filerename);
                            boolean truee = filter.renameTo(new File(filter.getParent() + "\\" + filerename));
                            // System.out.println(truee);

                        }
                    }
                }

                JOptionPane.showMessageDialog(null, "Done !!");
                absPath = null;

                fileOName = fileOName = fileType = renameTo = path = null;
                rfilepath.setText(null);
                fdirpath.setEditable(false);

            }
        } else {

            JOptionPane.showMessageDialog(this, "Please enter the file extension");
            fdirpath.setEnabled(false);
        }

    }//GEN-LAST:event_rbrowseActionPerformed

    private void fromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_fromActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        opener.setVisible(false);
        opener.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void rfilepathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rfilepathActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rfilepathActionPerformed

    private void internalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_internalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_internalKeyPressed

    private void setLookAndFeel() {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {

                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }

        } catch (Exception e) {

        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel extension;
    private javax.swing.JButton fbrowse;
    private javax.swing.JTextField fdirpath;
    private javax.swing.JPanel file;
    private javax.swing.JLabel fpath;
    private javax.swing.JTextField from;
    private javax.swing.JTabbedPane internal;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel lfrom;
    private javax.swing.JLabel lto;
    private javax.swing.JMenuItem open;
    private javax.swing.JFrame opener;
    private javax.swing.JToggleButton rbrowse;
    private javax.swing.JTextField rfilepath;
    private javax.swing.JLabel rpath;
    private javax.swing.JTextField to;
    // End of variables declaration//GEN-END:variables
}
